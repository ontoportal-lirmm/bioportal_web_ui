= ontology_object_details_component(frame_id: "property_show", ontology_id:  @acronym, objects_title:  "properties", object: @property) do
  = render ConceptDetailsComponent.new(id:'property-details', acronym: @acronym, concept_id: @property.id,
                        properties: @property.properties,
                        top_keys: [],
                        bottom_keys: LinkedData::Client::Models::Property.properties_to_hash(@property).first.keys.map(&:to_s),
                        exclude_keys: []) do |c|
    - c.header(stripped: true) do |t|
      - t.add_row({th: t('properties.id')}, {td: link_to_with_actions(@property.id, acronym: @acronym)})
      - t.add_row({th: t('properties.type')}, {td: @property.type })
      - t.add_row({th: t('properties.preferred_name')}, {td: display_in_multiple_languages(@property.label)}) unless  @property.label.blank?
      - t.add_row({th: t('properties.definitions')}, {td: display_in_multiple_languages(@property.definition)}) unless @property.definition.blank?
      - t.add_row({th: t('properties.domain')}, {td:  get_link_for_cls_ajax(@property.domain, @acronym, '_top')}) unless @property.domain.blank?
      - t.add_row({th: t('properties.range')}, {td: get_link_for_cls_ajax(@property.range, @acronym, '_top')}) unless @property.range.blank?