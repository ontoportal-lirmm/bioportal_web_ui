- @title= t('annotator.title')

%head
  = javascript_include_tag "bp_annotator"
%div.container
  %div.container-fluid.flex-grow-1
    %div.row
      %div.col
        %h2.mt-3= t('annotator.title')
        %p
          = t('annotator.index.intro', site: $SITE).html_safe
          = link_to(help_path(anchor: "Annotator_Tab"), id: "annotator-help", target: "_blank") do
            %i.fa.fa-question-circle.fa-lg{"aria-hidden": "true"}

    %div.row
      %div.col
        %form
          %div.form-group
            = hidden_field_tag :annotation_sample_text, t('annotator.index.sample_text')
            = text_area_tag("annotation_text", @text, rows: 10, class: "form-control", placeholder: t('annotator.annotate_text_prompt'), "aria-describedby": "annotateTextHelpBlock")
            %small#annotateTextHelpBlock.form-text
              %a#insert_text_link{href: "javascript:void(0);"}= t('nbco_annotatosplus.insert_sample_text')

          %a#advancedOptionsLink{:href => "javascript:void(0);"}= t('nbco_annotatosplus.show_advanced_options') + ">>"

          %div#advanced-options-container.mt-4
            %div.form-group
              %div.custom-control.custom-checkbox.custom-control-inline
                = check_box_tag("longest_only", "all", false, class: "custom-control-input")
                %label.custom-control-label{for: "longest_only"}= t('annotator.filters.match_longest_only')

              %div.custom-control.custom-checkbox.custom-control-inline
                = check_box_tag("whole_word_only", "all", false, class: "custom-control-input")
                %label.custom-control-label{for: "whole_word_only"}= t('annotator.filters.match_partial_words')

              %div.custom-control.custom-checkbox.custom-control-inline
                = check_box_tag("mappings", "all", false, id: "mappings_all", class: "custom-control-input")
                %label.custom-control-label{for: "mappings_all"}= t('annotator.filters.include_mappings')

              %div.custom-control.custom-checkbox.custom-control-inline
                = check_box_tag("exclude_numbers", "all", false, class: "custom-control-input")
                %label.custom-control-label{for: "exclude_numbers"}= t('annotator.filters.exclude_numbers')

              %div.custom-control.custom-checkbox.custom-control-inline
                = check_box_tag("exclude_synonyms", "all", false, class: "custom-control-input")
                %label.custom-control-label{for: "exclude_synonyms"}= t('annotator.filters.exclude_synonyms')

            %div.form-group
              %label{for: "ontology_ontologyId"}= t('annotator.select', name: t('ontology'))
              = select_tag("ontology_ontologyId", options_from_collection_for_select(@annotator_ontologies, :acronym, lambda { |ont| "#{ont.name} (#{ont.acronym})" }), |
                  multiple: true, class: "form-control", "aria-describedby": "selectOntologiesHelpBlock") |
              %small#selectOntologiesHelpBlock.form-text.text-muted= t('annotator.start_typing_to_select', type: t('ontology'))

            - if @sem_type_ont
              %div.form-group
                %label{for: "semantic_types"}= t('annotator.select', name: t('annotator.umls.semantic_types'))
                = select_tag("semantic_types", options_for_select(@semantic_types_for_select), multiple: "true", class: "form-control", "aria-describedby": "selectSemanticTypesHelpBlock")
                %small#selectSemanticTypesHelpBlock.form-text.text-muted= t('annotator.start_typing_to_select', type: t('annotator.umls.semantic_types'))

              %div.form-group
                %label{for: "semantic_groups"}= t('annotator.select', name: t('annotator.umls.semantic_groups'))
                = select_tag("semantic_groups", options_for_select(@semantic_groups_for_select), multiple: "true", class: "form-control", "aria-describedby": "selectSemanticGroupsHelpBlock")
                %small#selectSemanticGroupsHelpBlock.form-text.text-muted= t('annotator.start_typing_to_select', type: t('annotator.umls.semantic_groups'))

            %div.form-group
              %label{for: "class_hierarchy_max_level"}= t('annotator.filters.max_hierarchy_level')
              - options = [["none", 0], *(1..10).map {|i| [i, i]}, ["all", 999]]
              = select_tag("class_hierarchy_max_level", options_for_select(options, 0), class: "form-control")

            %div.form-group
              %label{for: "score"}= t('annotator.filters.score')
              - options = [["none", ""], ["old", "old"], ["cvalue", "cvalue"], ["cvalueh", "cvalueh"]]
              = select_tag(:score, options_for_select(options, 0), class: "form-control", "aria-describedby": "includeScoreHelpBlock")
              %small#includeScoreHelpBlock.form-text.text-muted= t('annotator.filters.score_help')

            %div.form-group
              %label{for: "score_threshold"}= t('annotator.filters.score_threshold')
              = number_field_tag(:score_threshold, 0, id: "score_threshold", class: "form-control", "aria-describedby": "scoreThresholdHelpBlock")
              %small#scoreThresholdHelpBlock.form-text.text-muted= t('annotator.filters.score_threshold_help')

            %div.form-group
              %label{for: "confidence_threshold"}= t('annotator.filters.confidence_threshold')
              = number_field_tag(:confidence_threshold, 0, min: 0, max: 100, id: "confidence_threshold", class: "form-control", "aria-describedby": "confidenceThresholdHelpBlock")
              %small#confidenceThresholdHelpBlock.form-text.text-muted= t('annotator.filters.confidence_threshold_help')

            - if @recognizers.length > 1
              %div.form-group
                %label{for: "recognizer"}= t('annotator.filters.recognizer')
                - default_recognizer = @recognizers.include?("mgrep") ? "mgrep" : @recognizers.first
                = select_tag("recognizer", options_for_select(@recognizers.map {|r| [r, r]}, default_recognizer), class: "form-control")

            %div.form-group
              %div.custom-control.custom-checkbox
                = check_box_tag("fast_context", :all, false, class: "custom-control-input")
                %label.custom-control-label{for: "fast_context"}= t('annotator.fast_context')
                %small#fast_contextnHelp.form-text.text-muted= t('annotator.index.fast_context.tooltip')
            %div.form-group
              %div.custom-control.custom-checkbox
                = check_box_tag("lemmatize", false, false, class: "custom-control-input")
                %label.custom-control-label{for: "lemmatize"}= t('annotator.lemmatize')
                %small#lemmatize.form-text.text-muted= t('annotator.index.lemmatize.tooltip')
          %div.my-4
            = button_tag(t('annotator.get_annotator'), type: "button", id: "annotator_button", class: "btn btn-primary btn-lg")
            %span.annotator_spinner
              %img{src: asset_path('spinners/spinner_000000_16px.gif')}/
            %span#annotator_error.annotator_error

    %div.row
      %div.col
        #annotations_container
          #result_counts
          %h4= t('annotator.annotations_result')
          #filter_list{:style => "font-size: 9pt; color: gray; display: none; clear: both; margin: -15px 0 5px"}
            %span#filter_title>  #{t('annotator.results_filtered_by')}:&nbsp;
            \&nbsp;
            %span#filter_names
          #results_error{:style => "color: red; margin-bottom: 7px;"}
          %table#annotations.zebra{:style => "min-width: 700px; width: 100%;"}
            %thead
              %tr
                %th
                  = t('class')
                  %span.popup_container
                    %span.bp_popup_link_container
                      %a#filter_classes.bp_popup_link{:href => "javascript:void(0);"}= t('filter')
                    %div#classes_filter_list.bp_popup_list
                %th
                  = t('ontology')
                  %span.popup_container
                    %span.bp_popup_link_container
                      %a#filter_ontologies.bp_popup_link{:href => "javascript:void(0);"}= t('filter')
                    %div#ontology_filter_list.bp_popup_list
                %th{class: "match_type"}
                  = t('type')
                  %span.popup_container
                    %span.bp_popup_link_container
                      %a#filter_match_type.bp_popup_link{:href => "javascript:void(0);"}= t('filter')
                    %div#match_type_filter_list.bp_popup_list
                %th= t('umls_sem_type')
                %th{class: "match_context"}= t('context')
                %th
                  = t('matched_class')
                  %span.popup_container
                    %span.bp_popup_link_container
                      %a#filter_matched_classes.bp_popup_link{:href => "javascript:void(0);"}= t('filter')
                    %div#matched_classes_filter_list.bp_popup_list
                %th
                  = t('matched_ontology')
                  %span.popup_container
                    %span.bp_popup_link_container
                      %a#filter_matched_ontologies.bp_popup_link{:href => "javascript:void(0);"}= t('filter')
                    %div#matched_ontology_filter_list.bp_popup_list
                %th= t('score')
                %th= t('negation')
                %th= t('experiencer')
                %th= t('temporality')
                %th= t('certainty')
            %tbody
          %div.my-3
            %b= t('format_results')
          %div.my-3
            %span#download_links_tabdelimited.link_button.ui_button
            %span#download_links_json.link_button.ui_button
            %span#download_links_rdf.link_button.ui_button
            %span#download_links_text.link_button.ui_button
            -# %span#download_links_xml.link_button.ui_button
          %div.mt-3
            = link_to(t('reproduce_results'))
            %span#annotator_parameters
          %div.mb-4
            = t('additional_parameters')
            = link_to('Annotator API documentation', "#{$REST_URL}/documentation#nav_annotator", target: "_blank")
            
:javascript
  window.addEventListener("load", function() {
    if(document.getElementById("annotation_text").value != ''){
      document.getElementById("annotator_button").click()
      window.scrollBy(0, 1080);
    }
  });