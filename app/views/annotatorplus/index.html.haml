- @title = t("annotator_plus.title")

%head
  = javascript_include_tag "bp_annotatorplus"

%div.container-fluid.flex-grow-1
  %div.row
    %div.col
      %h2.mt-3= t("annotator_plus.annotator")
      %p
        = t('annotator_plus.intro').html_safe
        = link_to(Rails.configuration.settings.links[:help_annotator],id: "annotator-help",
                  "aria-label": t('annotator_plus.help_label')) do
          %i.fa.fa-question-circle.fa-lg{"aria-hidden": "true"}
  %div.row
    %div.col
      %form
        %div.form-group
          = text_area_tag("annotation_text", nil, rows: 10, class: "form-control", placeholder: t('annotator_plus.annotate_text_prompt'), "aria-describedby": "annotateTextHelpBlock")
          %small#annotateTextHelpBlock.form-text
            %a#insert_text_link{href: "javascript:void(0);"}= t('annotator_plus.insert_sample_text')

        %a#advancedOptionsLink{:href => "javascript:void(0);"}= t('annotator_plus.show_advanced_options') + ">>"

        %div#advanced-options-container.mt-4
          %div.form-group
            %div.custom-control.custom-checkbox.custom-control-inline
              = check_box_tag("longest_only", "all", false, class: "custom-control-input")
              %label.custom-control-label{for: "longest_only"}= t('annotator_plus.match_longest_only')

            %div.custom-control.custom-checkbox.custom-control-inline
              = check_box_tag("whole_word_only", "all", false, class: "custom-control-input")
              %label.custom-control-label{for: "whole_word_only"}= t('annotator_plus.match_partial_words')

            %div.custom-control.custom-checkbox.custom-control-inline
              = check_box_tag("mappings", "all", false, id: "mappings_all", class: "custom-control-input")
              %label.custom-control-label{for: "mappings_all"}= t('annotator_plus.include_mappings')

            %div.custom-control.custom-checkbox.custom-control-inline
              = check_box_tag("exclude_numbers", "all", false, class: "custom-control-input")
              %label.custom-control-label{for: "exclude_numbers"}= t('annotator_plus.exclude_numbers')

            %div.custom-control.custom-checkbox.custom-control-inline
              = check_box_tag("exclude_synonyms", "all", false, class: "custom-control-input")
              %label.custom-control-label{for: "exclude_synonyms"}= t('annotator_plus.exclude_synonyms')

          %div.form-group
            %label{for: "ontology_ontologyId"}= t('annotator_plus.ontologies.select_label')
            = select_tag("ontology_ontologyId", options_from_collection_for_select(@annotator_ontologies, :acronym, lambda { |ont| "#{ont.name} (#{ont.acronym})" }), |
                multiple: true, class: "form-control", "aria-describedby": "selectOntologiesHelpBlock") |
            %small#selectOntologiesHelpBlock.form-text.text-muted= t('annotator_plus.ontologies.select_help_block')

          - if @sem_type_ont
            %div.form-group
              %label{for: "semantic_types"}= t('annotator_plus.umls_semantic_types.select_label')
              = select_tag("semantic_types", options_for_select(@semantic_types_for_select), multiple: "true", class: "form-control", "aria-describedby": "selectSemanticTypesHelpBlock")
              %small#selectSemanticTypesHelpBlock.form-text.text-muted= t('annotator_plus.umls_semantic_types.select_help_block')

            %div.form-group
              %label{for: "semantic_groups"}= t('annotator_plus.umls_semantic_groups.select_label')
              = select_tag("semantic_groups", options_for_select(@semantic_groups_for_select), multiple: "true", class: "form-control", "aria-describedby": "selectSemanticGroupsHelpBlock")
              %small#selectSemanticGroupsHelpBlock.form-text.text-muted= t('annotator_plus.umls_semantic_groups.select_help_block')

          %div.form-group
            %label{for: "class_hierarchy_max_level"}= t('annotator_plus.class_hierarchy_max_level.label')
            - options = [["none", 0], *(1..10).map {|i| [i, i]}, ["all", 999]]
            = select_tag("class_hierarchy_max_level", options_for_select(options, 0), class: "form-control")

          %div.form-group
            %label{for: "score"}= t('annotator_plus.include_score.label')
            - options = [["none", ""], ["old", "old"], ["cvalue", "cvalue"], ["cvalueh", "cvalueh"]]
            = select_tag(:score, options_for_select(options, 0), class: "form-control", "aria-describedby": "includeScoreHelpBlock")
            %small#includeScoreHelpBlock.form-text.text-muted= t('annotator_plus.include_score.help_block')

          %div.form-group
            %label{for: "score_threshold"}= t('annotator_plus.score_threshold.label')
            = number_field_tag(:score_threshold, 0, id: "score_threshold", class: "form-control", "aria-describedby": "scoreThresholdHelpBlock")
            %small#scoreThresholdHelpBlock.form-text.text-muted= t('annotator_plus.score_threshold.help_block')

          %div.form-group
            %label{for: "confidence_threshold"}= t('annotator_plus.confidence_threshold.label')
            = number_field_tag(:confidence_threshold, 0, min: 0, max: 100, id: "confidence_threshold", class: "form-control", "aria-describedby": "confidenceThresholdHelpBlock")
            %small#confidenceThresholdHelpBlock.form-text.text-muted= t('annotator_plus.confidence_threshold.help_block')

          - if @recognizers.length > 1
            %div.form-group
              %label{for: "recognizer"}= t('annotator_plus.recognizer.label')
              - default_recognizer = @recognizers.include?("mgrep") ? "mgrep" : @recognizers.first
              = select_tag("recognizer", options_for_select(@recognizers.map {|r| [r, r]}, default_recognizer), class: "form-control")

          %div.form-group
            %div.custom-control.custom-checkbox
              = check_box_tag("negation", :all, false, class: "custom-control-input")
              %label.custom-control-label{for: "negation"}= t('annotator_plus.negation.label')
              %small#negationHelp.form-text.text-muted= t('annotator_plus.negation.help_block')

            %div.custom-control.custom-checkbox
              = check_box_tag("experiencer", :all, false, class: "custom-control-input")
              %label.custom-control-label{for: "experiencer"}= t('annotator_plus.experiencer.label')
              %small#experiencerHelp.form-text.text-muted= t('annotator_plus.experiencer.help_block')

            %div.custom-control.custom-checkbox
              = check_box_tag("temporality", :all, false, class: "custom-control-input")
              %label.custom-control-label{for: "temporality"}= t('annotator_plus.temporality.label')
              %small#temporalityHelp.form-text.text-muted= t('annotator_plus.temporality.help_block')

        %div.my-4
          = button_tag(t('annotator_plus.get_annotations_button'), type: "button", id: "annotator_button", class: "btn btn-primary btn-lg")
          %span.annotator_spinner
            %img{src: asset_path('spinners/spinner_000000_16px.gif')}/
          %span#annotator_error.annotator_error

  %div.row
    %div.col
      #annotations_container
        #result_counts
        %h4= t('annotator_plus.annotations.title')
        #filter_list{:style => "font-size: 9pt; color: gray; display: none; clear: both; margin: -15px 0 5px"}
          %span#filter_title> = t('annotator_plus.annotations.filter_results_by')
          \&nbsp;
          %span#filter_names
        #results_error{:style => "color: red; margin-bottom: 7px;"}
        %table#annotations.zebra{:style => "min-width: 700px; width: 100%;"}
          %thead
            %tr
              %th
                = t('annotator_plus.annotations.class_header')
                %span.popup_container
                  %span.bp_popup_link_container
                    %a#filter_classes.bp_popup_link{:href => "javascript:void(0);"}= t('annotator_plus.annotations.filter')
                  %div#classes_filter_list.bp_popup_list
              %th
                = t('annotator_plus.annotations.ontology_header')
                %span.popup_container
                  %span.bp_popup_link_container
                    %a#filter_ontologies.bp_popup_link{:href => "javascript:void(0);"}= t('annotator_plus.annotations.filter')
                  %div#ontology_filter_list.bp_popup_list
              %th{class: "match_type"}
                = t('annotator_plus.annotations.type_header')
                %span.popup_container
                  %span.bp_popup_link_container
                    %a#filter_match_type.bp_popup_link{:href => "javascript:void(0);"}= t('annotator_plus.annotations.filter')
                  %div#match_type_filter_list.bp_popup_list
              %th= t('annotator_plus.annotations.umls_sem_type_header')
              %th{class: "match_context"}= t('annotator_plus.annotations.context_header')
              %th
                = t('annotator_plus.annotations.matched_class_header')
                %span.popup_container
                  %span.bp_popup_link_container
                    %a#filter_matched_classes.bp_popup_link{:href => "javascript:void(0);"}= t('annotator_plus.annotations.filter')
                  %div#matched_classes_filter_list.bp_popup_list
              %th
                = t('annotator_plus.annotations.matched_ontology_header')
                %span.popup_container
                  %span.bp_popup_link_container
                    %a#filter_matched_ontologies.bp_popup_link{:href => "javascript:void(0);"}= t('annotator_plus.annotations.filter')
                  %div#matched_ontology_filter_list.bp_popup_list
              %th= t('annotator_plus.annotations.score_header')
              %th= t('annotator_plus.annotations.negation_header')
              %th= t('annotator_plus.annotations.experiencer_header')
              %th= t('annotator_plus.annotations.temporality_header')
          %tbody
        %div.my-3
          %b= t('annotator_plus.annotations.format_results_as')
        %div.my-3
          %span#download_links_tabdelimited.link_button.ui_button
          %span#download_links_json.link_button.ui_button
          %span#download_links_rdf.link_button.ui_button
          %span#download_links_text.link_button.ui_button
          -# %span#download_links_xml.link_button.ui_button
        %div.mt-3
          = t('annotator_plus.annotations.reproduce_results_using')
          %span#annotator_parameters
        %div.mb-4
          = t('annotator_plus.annotations.additional_parameters_explained')
          = link_to(t('annotator_plus.annotations.annotator_api_documentation'), "#{$REST_URL}/documentation#nav_annotator", target: "_blank")
