-@title = t("ontoportal_virtual_appliance.title")

%div{:style => "padding: 13px; max-width: 800px;", :class => "enable-lists"}
  %h1= t("ontoportal_virtual_appliance.title")
  %p= t("ontoportal_virtual_appliance.intro_paragraph.main")
  %p= t("ontoportal_virtual_appliance.included_software")
  %ul
    %li= t("ontoportal_virtual_appliance.ontologies_api")
    %li= t("ontoportal_virtual_appliance.annotator")
    %li= t("ontoportal_virtual_appliance.recommender")
    %li= t("ontoportal_virtual_appliance.web_user_interface")
  %p
    = t("ontoportal_virtual_appliance.see_documentation")
    =link_to 'documentation', 'https://ontoportal.github.io/administration/steps/getting_started/', target: '_blank'
    = t("ontoportal_virtual_appliance.more_information")
  %h2= t("ontoportal_virtual_appliance.download_button_text")
    %li
      Version 3.1.1
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.1.1.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.1.0
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.1.0.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.0.6
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.0.6.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.0.5
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.0.5.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.0.4
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.0.4.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.0.3
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.0.3.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>
    %li
      Version 3.0.2
      <a href="https://www.bioontology.org/ontoportal-appliance/ontoportal_appliance-vmware-3.0.2.ova"> OVA</a>
      |
      <a href="https://ontoportal.github.io/administration/steps/getting_started/#amazon-aws-ami"> Amazon EC2</a>

  -if @virtual_appliance_access
    %h3= t("ontoportal_virtual_appliance.archives.title")
    %p= t("ontoportal_virtual_appliance.archives.archival_distribution")
    %ul
      %li
        = t("ontoportal_virtual_appliance.archives.version")
        =link_to 'OVF', 'https://www.bioontology.org/ontoportal-appliance/ontoportal-2.5.zip'

  -if @user.admin?
    %div{:style => "margin: 2em 0 0; padding: 1em 1em; border: solid thin gray; background-color: lightGray;"}
      %h1{:style => "margin-bottom: 15px;"}= t("ontoportal_virtual_appliance.admin_add_users.title")
      =form_for :appliance_user do |f|
        = f.label :user_id, t("ontoportal_virtual_appliance.admin_add_users.label_account_name")
        = f.text_field :user_id
        &nbsp;&nbsp;
        = f.submit t("ontoportal_virtual_appliance.admin_add_users.add_user_button")

      %h2{:style => "margin-top: 1em;"}
        = t("ontoportal_virtual_appliance.admin_add_users.accounts_with_access")
        %a#export{href: "#", style: "margin-left: 2em; margin-top: -1em; font-size: 11px;"}
          = t("ontoportal_virtual_appliance.admin_add_users.export_users_link")
      %table#user_table.zebra{style: "border: thin lightGray solid; background-color: white;"}
        %thead
          %tr
            %th= t("ontoportal_virtual_appliance.admin_add_users.bioportal_user")
        %tbody
        -@va_users.each do |u|
          %tr
            %td= link_to nil, u.user_id, target: '_blank'

:javascript

  $(document).ready(function() {
    function exportTableToCSV($table, filename) {
      var $headers = $table.find('tr:has(th)'),
          $rows = $table.find('tr:has(td)'),
          // Temporary delimiter characters unlikely to be typed by keyboard
          // This is to avoid accidentally splitting the actual contents
          tmpColDelim = String.fromCharCode(11), // vertical tab character
          tmpRowDelim = String.fromCharCode(0), // null character
          // actual delimiter characters for CSV format
          colDelim = '","',
          rowDelim = '"\r\n"',
          // Grab text from table into CSV formatted string
          csv = '"',
          csvData;
      csv += formatRows($headers.map(grabRow));
      csv += rowDelim;
      csv += formatRows($rows.map(grabRow)) + '"';

      // Data URI
      csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);
      $(this).attr({
        'download': filename,
        'href': csvData
      });

      //------------------------------------------------------------
      // Helper Functions
      //------------------------------------------------------------

      // Format the output so it has the appropriate delimiters
      function formatRows(rows) {
          return rows.get().join(tmpRowDelim).split(tmpRowDelim).join(rowDelim).split(tmpColDelim).join(colDelim);
      }

      // Grab and format a row from the table
      function grabRow(i, row) {
        var $row = $(row);
        //for some reason $cols = $row.find('td') || $row.find('th') won't work...
        var $cols = $row.find('td');
        if (!$cols.length) $cols = $row.find('th');
        return $cols.map(grabCol).get().join(tmpColDelim);
      }

      // Grab and format a column from the table
      function grabCol(j, col) {
        var $col = $(col),
            $text = $col.text();
        return $text.replace('"', '""'); // escape double quotes
      }
    }

    // This must be a hyperlink
    $("#export").click(function(event) {
      var outputFile = 'appliance_users.csv'
      exportTableToCSV.apply(this, [$('#user_table'), outputFile]);
    });
  });
