:javascript

  function ontologyFormatChange(event){
    let selected = event.target.selectedOptions.item(0)
    let options = document.querySelectorAll('.format_options')
    Array.from(options).forEach( x => $(x).hide())
    switch(selected.value){
      case 'OWL':
        jQuery("#owl_options").show()
        break
      case 'SKOS':
        jQuery("#skos_options").show()
        break
      default:
        jQuery("#skos_options").hide()
        jQuery("#owl_options").hide()
    }
  }

= attribute_form_group_container('hasOntologyLanguage') do
  %div{onchange: 'ontologyFormatChange(event)'}
    = select_input(label: "Format", name: "submission[hasOntologyLanguage]", values: ["OBO", "OWL", "SKOS", "UMLS"], selected: @submission.hasOntologyLanguage)
    %div#skos_options.upload-ontology-desc{style: "display:#{skos? ? 'block': 'none'}"}
      SKOS vocabularies submitted to BioPortal must contain a minimum of one concept scheme and top concept assertion.
      Please refer to the NCBO wiki for a more #{link_to 'detailed explanation', 'https://www.bioontology.org/wiki/index.php/SKOSSupport', target: "_blank" }
      with examples.
      %div
-#
  %div#owl_options
    %a#collapseOWLOptions{href: "#owl-options-properties", role: "button", data: {toggle: "collapse"}, aria: {expanded: "false", controls: "owl-options"},
                  class: "btn btn-outline-primary btn-sm"} Show advanced options

    %div#owl-options-properties.collapse.px-2.py-5.fade
      %div
        %div
          %label Customize default property settings
          = attribute_input('prefLabelProperty', label: 'Preferred name') do
            - c.help do
              Enter a property ID, or leave blank to use the default setting:
              = link_to 'http://www.w3.org/2004/02/skos/core#prefLabel', 'http://www.w3.org/2004/02/skos/core#prefLabel', target: "_blank"

          = attribute_input('synonymProperty', label: 'Synonym') do
            - c.help do
              Enter a property ID, or leave blank to use the default setting:
              = link_to 'http://www.w3.org/2004/02/skos/core#altLabel', 'http://www.w3.org/2004/02/skos/core#altLabel', target: "_blank"


          = attribute_input('definitionProperty', label: 'Definition') do
            - c.help do
              Enter a property ID, or leave blank to use the default setting:
              = link_to 'http://www.w3.org/2004/02/skos/core#definition', 'http://www.w3.org/2004/02/skos/core#definition', target: "_blank"


          = attribute_input('authorProperty', label: 'Author') do
            - c.help do
              Enter a property ID, or leave blank to use the default setting:
              = link_to 'http://purl.org/dc/elements/1.1/creator', 'http://purl.org/dc/elements/1.1/creator', target: "_blank"


      %div
        %div
          %label Identify obsolete classes
          = attribute_input('obsoleteProperty', label: 'Obsolete property') do
            - c.help do
              Optionally enter a property ID that indicates obsolete status for ontology classes
              (the property value must be set to "true"). Note that by default, BioPortal checks for existence of the owl:deprecated property.

          = attribute_input('obsoleteParent', label: 'Obsolete branch root') do
            - c.help do
              Optionally enter a class ID for the root of an obsolete branch. All classes in the branch will be marked as
              obsolete, with the exception of the root class.
