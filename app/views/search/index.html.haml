.search-page-container
  .search-page-subcontainer{'data-controller': 'reveal-component'}
    = form_tag(search_path, method: :get,data:{turbo: true, controller: 'form-url', action: 'submit->form-url#submit'}) do
      .search-page-input-container{'data-controller': 'reveal'}
        .search-page-input
          %input{type:"text", placeholder: t('search.search_place_holder'), name: "q", value: @search_query}
          .search-page-button
            = render Buttons::RegularButtonComponent.new(id:'search-page-button', value: "Search", variant: "primary", type: "submit") do |btn|
              = btn.icon_right do
                = inline_svg_tag "icons/search.svg"
            

        .search-page-advanced{'data-reveal-component-target': 'item', class: "#{@advanced_options_open ? '' : 'd-none'}"}
          .left
            .filter-container
              .title
                = t('search.advanced_options.search_language')
              .field
                = search_language_selector(name: 'lang', selected: params[:lang])
                
            .filter-container
              .title
                = t("search.advanced_options.ontologies")
              .field
                = ontologies_selector(id:'search_page_ontologies' ,name: 'ontologies[]', selected:  params[:ontologies]&.split(','))

          .right 
            .filter-container
              .title
                = t("search.advanced_options.include_in_search_title")
              .d-flex
                = render(ChipsComponent.new(name: 'also_search_properties', label: t("search.advanced_options.include_in_search_values.property_values"), checked:  params[:also_search_properties]))
                = render(ChipsComponent.new(name: 'also_search_obsolete', label: t("search.advanced_options.include_in_search_values.obolete_classses"), checked:  params[:also_search_obsolete]))
                = render(ChipsComponent.new(name: 'also_search_views', label: t("search.advanced_options.include_in_search_values.ontology_views"), checked: params[:also_search_views]))

            .filter-container
              .title
                =t('search.advanced_options.show_only_title')
              .d-flex
                = render(ChipsComponent.new(name: 'require_exact_match', label: t('search.advanced_options.show_only_values.exact_matches'),  checked:  params[:require_exact_match]))
                = render(ChipsComponent.new(name: 'require_definition', label: t('search.advanced_options.show_only_values.classes_with_definitions'), checked: params[:require_definition]))

        .search-page-options
          - if @search_results
            .search-page-number-of-results 
              = "#{t('search.match_in')} #{@search_results.length} #{t('search.ontologies')}"
          .search-page-advanced-button.show-options{class: "#{@advanced_options_open ? 'd-none' : ''}",'data': {'action': 'click->reveal-component#show', 'reveal-component-target': 'showButton'}}
            .icon
              =inline_svg_tag 'icons/settings.svg'
            .text
              = t('search.show_advanced_options')
          .search-page-advanced-button.hide-options{class: "#{@advanced_options_open ? '' : 'd-none'}", 'data': {'action': 'click->reveal-component#hide', 'reveal-component-target': 'hideButton'}}
            .icon
              =inline_svg_tag 'icons/hide.svg'
            .text
              = t('search.hide_advanced_options')
    - if @search_results
      .search-page-results-container
        - number = 0
        - @search_results.each do |result|
          .search-page-result-element
            - number = number + 1
            - descendants = result[:descendants]
            - reuses = result[:reuses]
            - result[:root][:number] = number
            = render Display::SearchResultComponent.new(result[:root]) do |c|
              - descendants.each { |d| c.subresult(d.merge(is_sub_component: true))}
              - reuses.each do |r|
                - number = number + 1
                - c.reuse(r[:root].merge(is_sub_component: true, number: number)) do |b|
                  - r[:descendants].each { |dd|  b.subresult(dd.merge(is_sub_component: true))}
    
    - if @search_results.empty? && !@search_query.empty?
      .browse-empty-illustration
        %img{:src => "#{asset_path("empty-box.svg")}"}
        %p No result was found
          