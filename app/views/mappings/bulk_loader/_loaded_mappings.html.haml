%div.w-100.h-100
  - if errors
    - errors = errors.map {|k,v| "Mapping #{k.to_s.to_i + 1} errors: #{v}"}
    = render Display::AlertComponent.new(type:'danger') do
      - errors.each do |error|
        %p
          = error
  %div.overflow-scroll
    - if created
      = render AlertsContainerComponent.new(id: alerts_container_id) do
        = render Display::AlertComponent.new(type: 'success') do
          = t("mappings.bulk_loader.loaded_mappings.mappings_created", size: created.size)
      %table.table.table-sm.zebra{data: {controller: 'data-table'}, style:"table-layout: fixed; font-size: 12px; word-break: break-word;"}
        %thead
          %tr
            %th{style: 'width: 5%'}
              = t("mappings.bulk_loader.loaded_mappings.id")
            %th{style: 'width: 20%'}
              = t("mappings.bulk_loader.loaded_mappings.source")
            %th{style: 'width: 20%'}
              = t("mappings.bulk_loader.loaded_mappings.target")
            %th{style: 'width: 20%'}
              = t("mappings.bulk_loader.loaded_mappings.relation")
            %th{style: 'width: 25%'}
              = t("mappings.bulk_loader.loaded_mappings.properties")
            %th
              = t("mappings.bulk_loader.loaded_mappings.actions")
        %tbody
          - created.each do |map|
            -  map_id = map.id.to_s.split("/").last
            %tr.human{id: map_id}
              - first_class, second_class = map.classes
              - process = map.process
              - except_prop = [:id,:links,:context,:relation]
              %td.text-truncate
                = link_to map_id
              %td
                = link_to first_class.id
              %td
                = link_to second_class.id
              %td
                = process.relation.join(',')
              %td
                %div.accordion{id: "accordion-#{map_id}"}
                  %div
                    %button.btn.btn-link.btn-sm{"data-target" => "#collapse-#{map_id}", "data-toggle" => "collapse", :type => "button"}
                      = t("mappings.bulk_loader.loaded_mappings.see_other_properties")
                  %div.collapse{id: "collapse-#{map_id}", "data-parent": "#accordion-#{map_id}"}
                    %ul.list-group.list-group
                      - process.to_h.except(*except_prop).each do |key,val|
                        %li.list-group-item
                          %strong
                            #{key}:
                          #{val}
              %td
                = button_to t("mappings.show_line.delete_button"), CGI.unescape(mapping_path(map.id)), method: :delete, class:'btn tn-sm btn-link', form: { data: { turbo: true, turbo_confirm: t("mappings.show_line.turbo_confirm"), turbo_frame:'_top'}}
          %tr.empty-state
            %td.text-center{:colspan => "6"}= t("mappings.mapping_table.no_mappings")