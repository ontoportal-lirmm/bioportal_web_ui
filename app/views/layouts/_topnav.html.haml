.nav-container.text-white{data: {controller:"topnav-responsiveness"}}
  %nav.top-nav
    .nav-responsiveness-container
      %a.nav-logo{href: "/"}
        %img{:src => asset_path("logo-white.svg")}/
        %p
          = portal_name
      %input#nav-menu{:type => "checkbox", 'data-topnav-responsiveness-target': 'navMenu'}
      %label.menu-btn{:for => "nav-menu"}
        %i.fas.fa-bars
    .nav-items
      %ul.top-nav-ul
        - navitems.each do |navItem|
          %li.nav-ul-li
            %a{href: navItem[0], class: ("active" if current_page?(navItem[0]))} #{navItem[1]}
        - if !session[:user].nil? && session[:user].admin?
          %li.nav-ul-li
            %a{href: "/admin", class: ("active" if current_page?("/admin"))} Admin
      .right-nav-items
        - if current_page?('/')
          .nav-search-container{style:'visibility: hidden'}
            %input
        - else
          .nav-search-container
            = ontologies_content_autocomplete(search_icon_type: 'nav')

        - if session[:user].nil?
          %a.nav-a{:href => "/login"}= t('layout.header.login')
        - else
          = render DropdownButtonComponent.new do |d|
            - d.header do
              = session[:user].username
            - d.with_section(divide: false) do |s|
              - s.item do
                = link_to(t('layout.header.account_setting'), "/account")
            - unless Array(session[:ontologies]).empty?
              - d.with_section do |s|
                - s.header do
                  Recently Viewed
                - for ont in Array(session[:ontologies])
                  - s.item do
                    = link_to(ont.ontology_name, "/ontologies/#{ont.ontology_acronym}/?p=classes&conceptid=#{CGI.escape(ont.concept)}")
            - d.with_section do |s|
              - s.item do
                = link_to(t('layout.header.logout'), logout_path)

        = portal_language_selector

        = render DropdownButtonComponent.new do |d|
          - d.header do
            = link_to("#", id: "supportMenuDropdownLink", class: "nav-link top-nav-nav-link supportMenuDropdownLink", role: "button") do
              = t('layout.header.support')
          - d.with_section(divide: false) do |s|
            - s.item do
              = link_to(t('layout.header.submit_feedback'), feedback_path(location: encode_param(request.url)), id: "submitFeedbackMenuItem", class: "pop_window")
          - d.with_section do |s|
            - s.item do
              = link_to(t('layout.header.documentation'), $FOOTER_LINKS[:sections][:support][:documentation] , target: "_blank")
            - s.item do
              = link_to(t('layout.header.cite_us'), $FOOTER_LINKS[:sections][:about][:cite_us], target: "_blank")
            - s.item do
              = link_to(t('layout.header.release_notes'), $FOOTER_LINKS[:sections][:products][:release_notes], target: "_blank")
            - s.item do
              = link_to(t('taxonomy.groups_and_categories'), '/groups')

