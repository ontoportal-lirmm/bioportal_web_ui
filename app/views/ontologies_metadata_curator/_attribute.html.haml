- acronym = ontology.acronym
- id = attribute_input_frame_id(acronym, submission.submissionId, attribute)
- from_ontology = true
= render TurboFrameComponent.new(id: id) do
  %div.d-flex.justify-content-between.align-items-center
    %div.d-flex.justify-content-between
      %div
        - equivalents = equivalent_ontology_properties(attribute)
        - if equivalents.empty?
          - equivalents = equivalent_properties(attribute)
          - from_ontology = false

        - equivalents.each do |attr|
          %div.d-flex
            - if equivalents.size > 1
              %span= "#{attr}: "
            %div
              %div
                = error_message_alert
              %div
                - if attribute == "contact"
                  = raw submission.contact.map {|c| [c["name"], c["email"]].join(", ") if c.member?(:name) && c.member?(:email)}.join("<br/>")
                - elsif attribute == "naturalLanguage"
                  - submission.send(attribute).each do |lang|
                    = render LanguageFieldComponent.new(value: lang)
                - elsif attribute == "ontology"
                  = acronym
                - else
                  - if from_ontology
                    - values = ontology.instance_values[attr.to_s]
                  - else
                    - values = submission.instance_values[attr.to_s]
                  - Array(values).each do |value|
                    - if values.is_a?(String) && %w[http https].include?(values[0..3])
                      = render LinkFieldComponent.new(value: values, raw: true, check_resolvability: true)
                    - elsif value.is_a?(LinkedData::Client::Models::Agent)
                      %div
                        = display_agent(value, link: false)
                    - else
                      %p
                        = value
            %div
              - if !from_ontology
                = edit_submission_property_link(acronym, submission.submissionId, attribute) do
                  %i.far.fa-edit