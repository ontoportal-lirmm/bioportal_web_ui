- if params[:pop].eql?("true")
  - pop = true
- unless @errors.nil?
  %div{:style => "color:red;margin-bottom:1em;"}
    = t("home.feedback.error_on_form")
    %ul
      - for error in @errors
        %li= error
= form_tag('/feedback') do
  -# Simulate form_for by providing a hidden field to check for submission
  = hidden_field_tag 'sim_submit', 'true'
  = hidden_field_tag("pop", pop)
  .d-flex.justify-content-center.m-3
    .feedback-form
      .feedback-title-container
        %h2.feedback-title
          = t("home.feedback.leave_your_feedback")
        %hr#feedback-title-line/
      - unless session[:user].nil?
        %p.feedback-text
          = t("home.feedback.feedback_hi_text")
          %font 
            = session[:user].username
            ,
      %p.feedback-email
        = t("home.feedback.feedback_info_text")
        %a{:href => "mailto: #{$SUPPORT_EMAIL}"}= $SUPPORT_EMAIL
        = t("home.feedback.feedback_info_text_rest")
        %a{:href => $GITHUB_ISSUES}
          Github issues
      - if session[:user].nil?
        %p.feedback-input-title
          = t("home.feedback.email")
          %font{:color => "red"} *
        %input.feedback-input{:name => "email", :type => "email"}/
        %p.feedback-input-title
          = t("home.feedback.name")
          %font.register-optional= t("home.feedback.optional")
        %input.feedback-input{:name => "name", :type => "text"}/
      - else
        = hidden_field_tag "name", session[:user].username
        = hidden_field_tag "email", session[:user].email
      %p.feedback-input-title
        = t("home.feedback.proposition_url_page")
        %font.register-optional= t("home.feedback.optional")
      %input.feedback-input{:name => "location", :type => "text", :value => unescape(params[:location] || '')}
      %p.feedback-input-title
        = t("home.feedback.feedback")
        %font{:color => "red"} *
      %textarea.feedback-input{:name => "comment", :rows => "6"}
      %p.feedback-input-title
        = t("home.feedback.tags")
        %font.register-optional= t("home.feedback.optional")
      .feedback-checks
        = render(ChipsComponent.new(name:"bug", value: t("home.feedback.bug")))
        = render(ChipsComponent.new(name:"proposition", value: t("home.feedback.proposition")))
        = render(ChipsComponent.new(name:"question", value: t("home.feedback.question")))
        = render(ChipsComponent.new(name:"ontology_submissions_request", value: t("home.feedback.ontology_submissions_request")))
      - if using_captcha?
        = recaptcha_tags  
      %input.feedback-button{:type => "submit", :value => t("home.feedback.send")}/
