.location-choice
  %input{type: "radio", name: "submission[isRemote]", value: "3", id: "metadata_only", onchange: "displayMetadataOnlyForm()"}
  %label.title{for: "metadata_only"}
    Metadata only (No file)
.upload-ontology-desc.mb-2
  Allow users to view and search your ontology metadata, but not its classes and properties.
#metadata-only-form.d-none
.location-choice
  %input{type: "radio", name: "submission[isRemote]", value: "1", id: "load_from_url", onchange: "displayUrlForm()"}
  %label.title{for: "load_from_url"}
    Load from URL
.upload-ontology-desc.mb-1
  New versions loaded on a nightly basis.
#url-form.d-none
  = render Input::UrlComponent.new(label: "", name: "submission[pullLocation]")
.location-choice.mb-3.mt-3
  %input{type: "radio", name: "submission[isRemote]", value: "0", id: "upload_local_file", checked: true, onchange: "displayLocalFileForm()"}
  %label.title{for: "upload_local_file"}
    Upload local file
#local-file-form
  = render Input::FileInputComponent.new(name: "submission[filePath]")


:javascript
  const MetadataOnlyForm = document.getElementById("metadata-only-form");
  const UrlForm = document.getElementById("url-form");
  const LocalFileForm = document.getElementById("local-file-form");

  const displayForm = (formElement) => {
    [MetadataOnlyForm, UrlForm, LocalFileForm].forEach((form) => {
      if (form === formElement) {
        form.classList.remove("d-none");
      } else {
        form.classList.add("d-none");
      }
    });
  };

  const displayMetadataOnlyForm = () => {
    displayForm(MetadataOnlyForm);
  };

  const displayUrlForm = () => {
    displayForm(UrlForm);
  };

  const displayLocalFileForm = () => {
    displayForm(LocalFileForm);
  };
