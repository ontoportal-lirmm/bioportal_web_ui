= render SummarySectionComponent.new(title: t("ontologies.sections.metadata.metrics") , link: Rails.configuration.settings.links[:metrics], link_title: t("ontologies.sections.metadata.metrics_link_title"), show_card: false, service_link: "#{@ontology.id}/metrics?display=all") do |s|
  - s.action_link do
    = link_to_modal '', ontology_path(@ontology.acronym) + "/metrics",
                        class: "metrics-item", title: t("ontologies.sections.metadata.see_all_metrics", acronym: @ontology.acronym),
                        data: { controller: "tooltip", show_modal_size_value: 'modal-md' , show_modal_title_value: t("ontologies.sections.metadata.show_modal_title_1", acronym: @ontology.acronym)}

  - if @metrics.nil? || (@metrics.is_a?(Array) && @metrics.empty?) || (@metrics.respond_to?(:status) && @metrics.status == 404)
    = empty_state_message(t("ontologies.sections.metadata.not_calculated_metrics", acronym: @ontology.acronym))
  - else
    .metrics-container.metrics
      - %w[classes individuals properties].each do |metric|
        = link_to_modal nil, ontology_path(@ontology.acronym) + "/metrics_evolution?metrics_key=#{metric}",
                        class: "metrics-item", data: { show_modal_title_value: t("ontologies.sections.metadata.show_modal_title_2", metric: metric, acronym: @ontology.acronym) } do
          %hr
          %div
            %h4
              = @metrics.send(metric)
            %p
              = render PopupLinkTextComponent.new(text: t("ontologies.sections.#{metric}"))

