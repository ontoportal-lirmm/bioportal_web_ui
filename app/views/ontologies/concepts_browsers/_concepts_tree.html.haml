%div{data:{controller: 'skos-collection-colors turbo-frame',
    'skos-collection-colors': {'collections-color-select-target-value': 'collection-color-filter'},
    'turbo-frame': {
      'url-value': "/ajax/classes/treeview?ontology=#{@ontology.acronym}&conceptid=root",
      'place-holder-value': t("ontologies.concepts_browsers.select_scheme")
      }}}
  %div.pb-2
    %div.mb-1
      = render partial: 'ontologies/concepts_browsers/jump_to', locals: {id: "#concepts-tree-filter"}
    - if skos?
      %div#concepts-tree-filter.collapse.card.p-2
        = render partial: 'ontologies/concepts_browsers/scheme_picker'
        = render partial: 'ontologies/concepts_browsers/collections_picker',
                       locals: {multiple: true, id: 'collection-color-filter',
                       data: {action: 'changed->skos-collection-colors#updateCollectionTags' ,
                        'skos-collection-colors-enable-colors-value': 'true'}}
  -# Class tree
  %div#sd_content.px-1{style: 'overflow-y: scroll; height: 60vh;'}
    - if skos? && @roots&.empty?
      %div.text-wrap
        = render Display::AlertComponent.new do
          = t("ontologies.concepts_browsers.missing_roots", acronym: @ontology.acronym)
    - else
      - concept_schemes = skos? ? "&concept_schemes=#{params[:concept_schemes]}" : ''
      = render TurboFrameComponent.new(id: 'concepts_tree_view',
                                     src: "/ajax/classes/treeview?ontology=#{@ontology.acronym}&conceptid=#{escape(@concept.id)}#{concept_schemes}&auto_click=false&language=#{request_lang}",
                                     data: {'turbo-frame-target': 'frame'})