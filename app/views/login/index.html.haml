- @title = t('login.title')
- unless @errors.nil?
  %div{:style => "color:red;"}
    = t('login.invalid_login')
    %ul
      - for error in @errors
        %li= error
.d-flex.justify-content-center
  .login-form
    = form_for(:user, :url => {:controller => 'login',:action=>'create'}) do |f|
      %p.login-input-title= t('login.username_or_email')
      = text_field 'user', 'username', class: "login-input email-input", placeholder: t('login.enter_email')
      %p.login-input-title= t('login.password')
      = password_field 'user','password', :autocomplete => "off", class: "login-input password-input", placeholder:  t('login.enter_password')
      %a.login-forgot-password{:href => "/lost_pass"}
        %p= t('login.forgot_password')
      .login-button-container
        = render Buttons::RegularButtonComponent.new(id: 'login-button', value: "Login", type:'submit')
      %p.dont-have-account
        = t('login.no_account')
        %a.text-decoration-none{:href => new_user_path}= t('login.register')
    %hr.divider.w-100.mb-4.mt-4
    %div.d-flex.justify-content-around.flew-wrap
      - omniauth_providers_info.each do |provider, config|
        - if config[:enable]
          = button_to  "/auth/#{config[:name] || config[:strategy] || provider}",
                      class: 'btn btn-lg',disabled: !config[:enable] ,style:'width: 70px', title: t('login.login_with_provider', provider: provider.to_s.humanize), 'data-turbo': false do; 
            - if config[:icon]
              = inline_svg "icons/#{config[:icon]}", class: 'login-active-sso'
            - else
              = provider.to_s.humanize
        - else
          .disabled-login-sso
            = render Display::InfoTooltipComponent.new(text: "#{provider.to_s.humanize} is disabled") do
              = inline_svg "icons/#{config[:icon]}", width: "40", height: "40"